/*
 O arquivo contendo o diagrama com esse estado especifico se chama:
 5.transitional_blueprint.png
*/

/*
 ADICIONAMOS A COLUNA STATUS NO FATURA PARA INDICAR SE ELA ESTÁ OU NÃO ESTÁ PAGA
*/

ALTER TABLE INVOICE
ADD STATUS VARCHAR2(8)
DEFAULT 'OPENED'
CHECK(STATUS IN ('OPENED', 'CLOSED'));

/*
 Criando o Trigger para fazer a validação
*/

CREATE OR REPLACE TRIGGER UPDATE_TOTAL_FROM_INVOICE_WHEN_UPDATE_TRACK
AFTER UPDATE ON TRACK
FOR EACH ROW
DECLARE
CURSOR invoice_lines IS
    SELECT * FROM INVOICELINE IL
    JOIN INVOICE I on IL.INVOICEID = I.INVOICEID
    WHERE IL.TRACKID = :NEW.TRACKID AND I.STATUS = 'OPENED';

CURSOR invoices IS
    SELECT DISTINCT * FROM INVOICE I
    WHERE I.INVOICEID IN (
        SELECT INVOICELINE.INVOICEID FROM INVOICELINE
        WHERE INVOICELINE.TRACKID = :NEW.TRACKID
    ) AND I.STATUS = 'OPENED';
BEGIN
    FOR invoice_line IN invoice_lines LOOP
        UPDATE INVOICELINE
            SET UNITPRICE = :NEW.UNITPRICE
            WHERE INVOICELINE.INVOICELINEID = invoice_line.INVOICELINEID;
    END LOOP;

    FOR invoice IN invoices LOOP
        UPDATE INVOICE
            SET TOTAL = (
                SELECT SUM(IL.UNITPRICE * IL.QUANTITY) FROM INVOICELINE IL
                WHERE IL.INVOICEID = invoice.INVOICEID
            )
            WHERE INVOICE.INVOICEID = invoice.INVOICEID;
    END LOOP;
END;

/*
 INICIO DO TESTE, A INVOICE DE ID 214
 POSSUI O PREÇO TOTAL DE 8.91 E
 POSSUI 9 INVOICELINES UMA DELAS COM O TRACKID 2
*/

SELECT * FROM INVOICE WHERE INVOICEID = 214;

/*
 VAMOS ATUALIZAR O UNITPRICE DA TRACK DE ID 2
 PARA 10.91 ASSIM O PREÇO RESULTANTE TOTAL DEVERA SER 18.83
*/

UPDATE TRACK SET UNITPRICE = 10.91 WHERE TRACKID = 2;

/*
 CONFIRMANDO O VALOR AGORA
*/

SELECT * FROM INVOICE WHERE INVOICEID = 214;
